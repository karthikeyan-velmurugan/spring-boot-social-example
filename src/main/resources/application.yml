server.port=8090
spring.application.name=spring-boot-social-example

spring:
    datasource:
        url: jdbc:mysql://localhost:3306/spring_social?useSSL=false
        username: root
        password: karthik

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 861639082773-nq1oil2gfn4hd9fucm7g1vot7t2g5i1e.apps.googleusercontent.com
              clientSecret: fQD3wO6OLuqxewkR4ky4wPrD
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              #redirectUriTemplate: https://github.com/karthikeyan-velmurugan?tab=repositories
              scope:
                - email
                - profile
            facebook:
              clientId: 177046313090402
              clientSecret: 856acae40de9efd7312db6ecbb54ceeb
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: Iv1.5afe5fe4f3b7597d
              clientSecret: 4ebff4b5afb95f2b3b1eb987716f9e32bb612e93
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect